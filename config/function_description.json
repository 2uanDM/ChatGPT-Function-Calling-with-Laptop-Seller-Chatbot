[
  {
    "name": "release_context_token",
    "description": "You are TTChat, a chatbot that helps users choose the suitable laptop based on their needs. This function must be call when the current context is nearly 16000 to release the message context. This is really important",
    "parameters": null
  },
  {
    "name": "buy_laptop_or_leave_contact",
    "description": "This function have to be called when the user want to (Buy an specific laptop or have a meeting at the shop, or want or give comment to the chatbot. This function has higher priority to call than get_laptop_detail",
    "parameters": null
  },
  {
    "name": "get_laptop_detail",
    "description": "You are TTChat, a chatbot that helps users choose the suitable laptop based on their needs. This function must be called when the user wants to know detail about some founded product. I will give you a description below with those laptop",
    "parameters": {
      "type": "object",
      "properties": {
        "which_one": {
          "type": "string",
          "description": "The order of the laptop in the list of recommned laptops or sometime the name of that laptop. For example, if the user wants to know detail about the first laptop in the list, then return 'first', if the user wants to know detail about the second laptop in the list, then return 'second', if the user wants to know detail about the laptop named 'acer aspire 5', then return 'acer aspire 5'. If the user doesn't care about the laptop, this value will be null"
        }
      }
    }
  },
  {
    "name": "queries_db",
    "description": "You are TTChat, a chatbot that helps users choose the suitable laptop based on their needs. Of course, we have a database that contains a lot of features of laptops, but we need to infer what users want so that we can query relative laptops from the database. This function must be called when you think that the user tells you about specs they need in a laptop, or they change their option. Remember that, if user want to know detail about some founded product, do not call this function (Price, Brand, Use Purpose, Weight, Screen Size or Resolution, etc). I will give you a description below with many features to collect.",
    "parameters": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the user requirement"
        },
        "start_present_price": {
          "type": "integer",
          "description": "The start price of the laptop in Viet Nam Dong that the user wants to buy. If the user doesn't care about the price, this value will be null"
        },
        "end_present_price": {
          "type": "integer",
          "description": "The end price of the laptop in Viet Nam Dong that the user wants to buy. If the user doesn't care about the price, this value will be null"
        },
        "manufacturer": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The manufacturers of the laptop that the user wants to buy. Must be lowercase in these brands (acer, asus, dell, hp, lenovo, msi). For example, if the user wants just acer, then return ['acer'], if the user wants acer and dell, return ['acer','dell']. If the user doesn't care about the manufacturer, this value will be null"
          },
          "description": "The manufacturers of the laptop that the user wants to buy."
        },
        "laptop_type": {
          "type": "string",
          "description": "The type of laptop that the user wants to buy. Must be lowercase in these types (gaming, business, normal, workstation). Note that you should not just introduct to user just workstation since they are rare, so you should also add gaming device. If the user doesn't care about the type, this value will be null"
        },
        "cpu": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The CPU of the laptop that the user wants to buy. Must be lowercase in these CPUs (i3, i5, i7, i9, ryzen 3, ryzen 5, ryzen 7, ryzen 9). For example, if the user wants just i5, then return ['i5'], if the user wants i5 and ryzen 5, return ['i5','ryzen 5']. If the user doesn't care about CPU, this value will be null"
          },
          "description": "The CPU of the laptop that the user wants to buy."
        },
        "cpu_generation": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "The CPU generation of the laptop that the user wants to buy (integer). The example return is [12, 13] if the user wants CPU gen 11 or CPU gen 13. Not that this feature is not necessary, so just when user ask then add this feature, else forget it. If the user doesn't care about CPU generation, this value will be null"
          },
          "description": "The CPU generation of the laptop that the user wants to buy."
        },
        "disk_type": {
          "type": "string",
          "description": "The disk type of the laptop that the user wants to buy. Must be uppercase in these types (SSD, HDD). If the user doesn't care about the disk type, this value will be null"
        },
        "start_disk_size": {
          "type": "integer",
          "description": "The start value of the disk size of the laptop that the user wants to buy. If the user doesn't care about the disk size, this value will be null"
        },
        "end_disk_size": {
          "type": "integer",
          "description": "The end value of the disk size of the laptop that the user wants to buy. If the user doesn't care about the disk size, this value will be null"
        },
        "start_ram_gb": {
          "type": "integer",
          "description": "The start value of RAM size of the laptop that the user wants to buy. If the user doesn't care about RAM size, this value will be null"
        },
        "end_ram_gb": {
          "type": "integer",
          "description": "The end value of RAM size of the laptop that the user wants to buy. If the user doesn't care about RAM size, this value will be null"
        },
        "max_ram_slot": {
          "type": "integer",
          "description": "The max RAM slot of the laptop that the user wants to buy. If the user doesn't care about max RAM slot, this value will be null"
        },
        "screen_size": {
          "type": "array",
          "items": {
            "type": "number",
            "description": "The screen size of the laptop that the user wants to buy (in float). If the user wants a big screen, it means that they want 15.6 inches or more, so return [15.6, 17.3] for example. Hence, if the user wants a small screen, return a list of screens smaller than 14 inches. Remember that values in the list must be float. If the user doesn't care about the screen size, this value will be null"
          },
          "description": "The screen size of the laptop that the user wants to buy."
        },
        "screen_ratio": {
          "type": "string",
          "description": "The screen ratio of the laptop that the user wants to buy. Must be lowercase in these ratios (16:9, 16:10, 3:2, 4:3). If the user doesn't care about screen ratio, this value will be null"
        },
        "screen_resolution": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The screen resolution of the laptop that the user wants to buy. Must be in these format (1920 x 1080, 1366 x 768, ...).Note that user often ask like 'I want 2k screen', so you need to estimate the actual resolution yourself. Here are some guides: if use also mention to the screen ratio, then you need to remember to calculate correct resolution. For example, if the user wants just full hd but do not mention about ratio, then return ['1920 x 1080'] (default is 16:9), but if they want full hd and 16:10 ratio, then it must be ['1920 x 1200'], if the user wants full hd and 2k, return ['1920 x 1080','2560 x 1440']. If the user doesn't care about screen resolution, this value will be null"
          },
          "description": "The screen resolution of the laptop that the user wants to buy."
        },
        "start_screen_refresh_rate": {
          "type": "integer",
          "description": "The start value of the screen refresh rate of the laptop that the user wants to buy. If the user doesn't care about the screen refresh rate, this value will be null"
        },
        "end_screen_refresh_rate": {
          "type": "integer",
          "description": "The end value of the screen refresh rate of the laptop that the user wants to buy. If the user doesn't care about the screen refresh rate, this value will be null"
        },
        "gpu_type": {
          "type": "string",
          "description": "The GPU type of the laptop that the user wants to buy. Must be lowercase in these types (integrated, dedicated). If the user doesn't care about GPU type, this value will be null"
        },
        "gpu_model": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The GPU brand of the laptop that the user wants to buy. Must be lowercase in these brands (nvidia, amd, intel). For example, if the user wants just nvidia, then return ['nvidia'], if the user wants nvidia and amd, return ['nvidia','amd']. If the user doesn't care about GPU brand, this value will be null"
          },
          "description": "The GPU brand of the laptop that the user wants to buy."
        },
        "start_weight_kg": {
          "type": "number",
          "description": "The start value weight of the laptop that the user wants to buy (in kg, can be float). If the user doesn't care about weight, this value will be null"
        },
        "end_weight_kg": {
          "type": "number",
          "description": "The end value weight of the laptop that the user wants to buy (in kg, can be float). If the user doesn't care about weight, this value will be null"
        }
      },
      "required": ["manufacturer", "laptop_type", "cpu"]
    }
  },
  {
    "name": "discovery_more_laptop",
    "description": "This function will be call when user want to discover more laptops (After surfing or event get laptop detail of the first 5 ones). You should return a list of laptops that have not been introduced to the user yet. Remember that, if user want to know detail about some founded product, do not call this function",
    "parameters": null
  }
]
